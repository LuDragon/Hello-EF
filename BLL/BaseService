using IBLL;
using IDAL;

namespace BLL
{
    /// <summary>
    /// 服务基类  
    /// </summary>
    public abstract class BaseService<T> : IBaseService<T> where T : class
    {
        protected IBaseRepository<T> CurrentRepository { get; set; }

        public BaseService(IBaseRepository<T> currentRepository) { CurrentRepository = currentRepository; }

        public T Add(T entity) { return CurrentRepository.Add(entity); }

        public bool Update(T entity) { return CurrentRepository.Update(entity); }

        public bool Delete(T entity) { return CurrentRepository.Delete(entity); }

        /// <summary>
        /// 更新指定字段
        /// </summary>
        /// <param name="entity"></param>
        /// <param name="whereLambda"></param>
        /// <returns></returns>
        public bool Update(T entity, Model.Common.FieldsLambda<T> fields)
        {
            return CurrentRepository.Update(entity, fields);
        }
    }
}
